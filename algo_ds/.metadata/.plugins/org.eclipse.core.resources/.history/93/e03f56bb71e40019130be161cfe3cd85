#include<iostream>
#include<cstring>
#include<stack>
using namespace std;
void infix_to_postfix(char *in, char *post);
bool is_operand(char ch);
int priority(char opr);


int main(void)
{
	char infix[64]="(a*b)*(c+d)/e*f-g*h";
	char postfix[64]=" ";

	cout<<"infix expression ::  "<<infix<<endl;
	infix_to_postfix(infix,postfix);
	cout<<"postfix expression:: "<<postfix<<endl;
	return 0;
}
void infix_to_postfix(char *in,char *post)
{
	stack<int> s;
	int j=0;
	 for( int i=0; in[i] !='\0';++i)
	 {
		 if(is_operand(in[i]))
		 {
		 post[j++]=in[i];

		 }
		else
		if(in[i] == '(')
		{
			s.push(in[i]);

		}
		else
			if(in[i]=='j')
			{
              while(s.top() !='(')
              {
            	  post[j++]= s.top();s.pop();

              }
              s.pop();
			}
			else
			{
				while(!s.empty() && priority(s.top() ) >= priority(in[i]) )
				{
					post[j++]=s.top();s.pop();
				}
				s.push(in[i]);
			}
	 }
	 while( !s.empty() )
	 {
		 post[j++]=s.top();s.pop();
	 }
	 post[j]='\0';
}
